{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORTED_ALPHABET","SORTED_LENGTH","App","useState","sortField","setSortField","isGoodReversed","setIsGoodReversed","visibleGoods","goods","sortedGoods","copyGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","onClick","type","classNames","map","good","ReactDOM","render","document","getElementById"],"mappings":"0OAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAkB,WAClBC,EAAgB,SA2Bf,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4CF,oBAAS,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KAEMC,EA7BR,SAA0BC,EAAOC,EAAaJ,GAC5C,IAAMK,EAAS,UAAOZ,GAqBtB,OAnBIW,GACFC,EAAUC,MAAK,SAACC,EAAOC,GACrB,OAAQJ,GACN,KAAKV,EACH,OAAOa,EAAME,cAAcD,GAE7B,KAAKb,EACH,OAAOY,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXV,GACFK,EAAUM,UAGLN,EAOcO,CACnBnB,EACAK,EACAE,GAGF,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAOf,EAAaL,IAC7BqB,KAAK,SACLF,UAAWG,IACT,iBACA,CAAE,WAAYlB,IAAcJ,IALhC,iCAWA,wBACEoB,QAAS,kBAAMf,EAAaJ,IAC5BoB,KAAK,SACLF,UAAWG,IACT,oBACA,CAAE,WAAYlB,IAAcH,IALhC,4BAWA,wBACEkB,UAAWG,IACT,SACA,aACA,CAAE,YAAahB,IAEjBc,QAAS,kBAAMb,GAAmBD,IAClCe,KAAK,SAPP,sBAYEjB,GAAaE,IAEX,wBACEe,KAAK,SACLF,UAAU,4BACVC,QAAS,WACPb,GAAkB,GAClBF,EAAa,KALjB,sBAaN,6BACGG,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,aC5GbC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ebff7f07.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORTED_ALPHABET = 'alphabet';\nconst SORTED_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, sortedGoods, isGoodReversed) {\n  const copyGoods = [...goodsFromServer];\n\n  if (sortedGoods) {\n    copyGoods.sort((good1, good2) => {\n      switch (sortedGoods) {\n        case SORTED_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORTED_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isGoodReversed) {\n    copyGoods.reverse();\n  }\n\n  return copyGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isGoodReversed, setIsGoodReversed] = useState(false);\n\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer,\n    sortField,\n    isGoodReversed,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => (setSortField(SORTED_ALPHABET))}\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortField !== SORTED_ALPHABET },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORTED_LENGTH)}\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortField !== SORTED_LENGTH },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          className={classNames(\n            'button',\n            'is-warning',\n            { 'is-light': !isGoodReversed },\n          )}\n          onClick={() => setIsGoodReversed(!isGoodReversed)}\n          type=\"button\"\n        >\n          Reverse\n        </button>\n\n        {(sortField || isGoodReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setIsGoodReversed(false);\n                setSortField('');\n              }}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}